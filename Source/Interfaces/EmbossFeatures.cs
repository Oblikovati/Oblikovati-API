namespace Oblikovati.API;

/// <summary>
/// The EmbossFeatures object represents a collection of objects on a part.
/// </summary>
public interface EmbossFeatures : IEnumerable
{
    /// <summary>
    /// Returns an ObjectTypeEnum indicating this object's type.
    /// </summary>
    ObjectTypeEnum Type { get; }
    /// <summary>
    /// Returns the top-level parent application object.  When used the context of Inventor, an Application object is returned.  When used in the context of Apprentice, an ApprenticeServer object is returned.
    /// </summary>
    object Application { get; }
    /// <summary>
    /// Returns the specified EmbossFeature object from the collection.
    /// </summary>
    EmbossFeature Item { get; }
    /// <summary>
    /// Property that returns the number of items in this collection.
    /// </summary>
    int Count { get; }
    /// <summary>
    /// Method that creates a new emboss feature by embossing a profile on one or more faces in the model.
    /// </summary>
    /// <param name="Profile">Input Profile object used to define the shape of the emboss. The specified profile must be closed, otherwise (i.e. if the profile is open), the creation of the emboss feature will fail. The closed profiles can constitute both sketch entities as well as text.</param>
    /// <param name="Distance">Input Variant that defines the depth of the emboss. This can be either a numeric value or a string. A parameter for this value will be created and the supplied string or value is assigned to the parameter. If a value is input, the units are centimeters. If a string is input, the units can be specified as part of the string or it will default to the current length units of the document.</param>
    /// <param name="ExtentDirection">Input constant that indicates on which side of the sketch plane the emboss feature should be created. First, the profile will be projected along the specified direction onto all faces that are in that direction. Then, the emboss feature will be generated by embossing the projected profile on these faces. Valid input is either kPositiveExtentDirection or kNegativeExtentDirection constant value in PartFeatureExtentDirectionEnum. The value kPositiveExtentDirection defines the projection direction of the profile to be in the same direction as the normal of the sketch plane that contains the profile to be embossed. If kSymmetricExtentDirection is specified, then the creation of the emboss feature will fail.</param>
    /// <param name="TopFaceColor">Optional Input Variant that defines the render style to use for the top face of the emboss feature. The valid input is a RenderStyle object. If no input is specified, then the default render style will be applied.</param>
    /// <param name="WrapFace">Optional Input Variant that specifies the face around which the emboss feature should be wrapped. The valid input is a Face object. This argument can be used to specify a curved face around which the emboss feature should be wrapped. The face can only be planar or conical, not a spline. If the emboss profile is large relative to the amount of curvature, the embossed or engraved area distorts slightly as it projects to the curved face. The wrap stops when a perpendicular face is encountered. If this argument is not specified, then it implies that the emboss feature should not be wrapped around any face, but created as a result of straight projection onto the face.</param>
    /// <returns></returns>
    [PreserveSig]
    EmbossFeature AddEmbossFromFace([In] [MarshalAs(UnmanagedType.Interface)] Profile Profile, [In] [MarshalAs(UnmanagedType.Struct)] object Distance, [In] PartFeatureExtentDirectionEnum ExtentDirection, [In] [MarshalAs(UnmanagedType.Struct)] object? TopFaceColor = default, [In] [MarshalAs(UnmanagedType.Struct)] object? WrapFace = default);
    /// <summary>
    /// Method that creates a new emboss feature by engraving a profile on one or more faces in the model.
    /// </summary>
    /// <param name="Profile">Input Profile object used to define the shape of the emboss. The specified profile must be closed, otherwise (i.e. if the profile is open), the creation of the emboss feature will fail. The closed profiles can constitute both sketch entities as well as text.</param>
    /// <param name="Distance">Input Variant that defines the depth of the emboss. This can be either a numeric value or a string. A parameter for this value will be created and the supplied string or value is assigned to the parameter. If a value is input, the units are centimeters. If a string is input, the units can be specified as part of the string or it will default to the current length units of the document.</param>
    /// <param name="ExtentDirection">Input constant that indicates on which side of the sketch plane the emboss feature should be created. First, the profile will be projected along the specified direction onto all faces that are in that direction. Then, the emboss feature will be generated by engraving the projected profile on these faces. Valid input is either kPositiveExtentDirection or kNegativeExtentDirection constant value in PartFeatureExtentDirectionEnum. The value kPositiveExtentDirection defines the projection direction of the profile to be in the same direction as the normal of the sketch plane that contains the profile to be embossed. If kSymmetricExtentDirection is specified, then the creation of the emboss feature will fail.</param>
    /// <param name="TopFaceColor">Optional Input Variant that defines the render style to use for the top face of the emboss feature. The valid input is a RenderStyle object. If no input is specified, then the default render style will be applied.</param>
    /// <param name="WrapFace">Optional Input Variant that specifies the face around which the emboss feature should be wrapped. The valid input is a Face object. This argument can be used to specify a curved face around which the emboss feature should be wrapped. The face can only be planar or conical, not a spline. If the emboss profile is large relative to the amount of curvature, the embossed or engraved area distorts slightly as it projects to the curved face. The wrap stops when a perpendicular face is encountered. If this argument is not specified, then it implies that the emboss feature should not be wrapped around any face, but created as a result of straight projection onto the face.</param>
    /// <returns></returns>
    [PreserveSig]
    EmbossFeature AddEngraveFromFace([In] [MarshalAs(UnmanagedType.Interface)] Profile Profile, [In] [MarshalAs(UnmanagedType.Struct)] object Distance, [In] PartFeatureExtentDirectionEnum ExtentDirection, [In] [MarshalAs(UnmanagedType.Struct)] object? TopFaceColor = default, [In] [MarshalAs(UnmanagedType.Struct)] object? WrapFace = default);
    /// <summary>
    /// Method that creates a new emboss feature by embossing and/or engraving a profile on one or more faces in the model.
    /// </summary>
    /// <param name="Profile">Input Profile object used to define the shape of the emboss. The specified profile must be closed, otherwise (i.e. if the profile is open), the creation of the emboss feature will fail. The closed profiles can constitute both sketch entities as well as text.</param>
    /// <param name="Taper">Input Variant that defines the taper angle of the emboss. This can be either a numeric value or a string. A parameter for this value will be created and the supplied string or value is assigned to the parameter. If a value is input, the units are centimeters. If a string is input, the units can be specified as part of the string or it will default to the current length units of the document.</param>
    /// <param name="ExtentDirection">Input constant that indicates on which side of the sketch plane the emboss feature should be created. The profile will be extended to create the emboss feature starting from the sketch plane until any existing face in the model is intersected. Valid input is any one of the constants in PartFeatureExtentDirectionEnum: kPositiveExtentDirection, kNegativeExtentDirection or kSymmetricExtentDirection. The value kPositiveExtentDirection defines the emboss direction to be in the same direction as the normal of the sketch plane that contains the profile to be embossed.</param>
    /// <param name="TopFaceColor">Optional Input Variant that defines the render style to use for the top face of the emboss feature. The valid input is a RenderStyle object. If no input is specified, then the default render style will be applied.</param>
    /// <returns></returns>
    [PreserveSig]
    EmbossFeature AddEmbossEngraveFromPlane([In] [MarshalAs(UnmanagedType.Interface)] Profile Profile, [In] [MarshalAs(UnmanagedType.Struct)] object Taper, [In] PartFeatureExtentDirectionEnum ExtentDirection, [In] [MarshalAs(UnmanagedType.Struct)] object? TopFaceColor = default);
}
